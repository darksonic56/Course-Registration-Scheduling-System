/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package courseregistrationschedulingsystem;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Subham Guha(sjg5441)
 */
public class CourseMenu extends javax.swing.JFrame {
    MainMenu menu = new MainMenu();
    DefaultListModel stats = new DefaultListModel();
    /**
     * Creates new form CoursesMenu
     */
    public CourseMenu() {
        initComponents();
        roomsAddedList();
        studentsAddedList();
        // Displays the courses added in the Jtable when returning back to this frame
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        for(int i = 0; i<menu.courses.size();i++)
        {
            model.addRow(new Object[]{menu.courses.get(i).getCourseName(), menu.courses.get(i).getCourseTime()});
        }
    }

    
    public String getCourseName()
    {
        return courseNameText.getText();
    }
    
    public String getCourseTime()
    {
        String time = timeBox.getSelectedItem().toString();
        return time;
    }
    
    public String getRoomNum()
    {
       return roomList.getSelectedValue();
    }
    
    public String getStudent()
    {
        return studentList.getSelectedValue();
    }
    public void roomsAddedList()
    {
        // adds in a room number from the Room List to a JList
        String roomNumber;
        DefaultListModel data = new DefaultListModel();
        roomList.setModel(data);
        if(!menu.rooms.isEmpty())
        {
            for(int i = 0; i<menu.rooms.size();i++)
            {
                roomNumber = menu.rooms.get(i).getRoomId().toString();
                data.add(i, roomNumber);
            }
            roomList.setModel(data);
        }
    }
    
    public void studentsAddedList()
    {
        // adds in a student information to a JList
        String first, last, phone, display;
        DefaultListModel data = new DefaultListModel();
        studentList.setModel(data);
        if(!menu.students.isEmpty())
        {
            for(int i = 0; i<menu.students.size();i++)
            {
                first = menu.students.get(i).getFirstName();
                last = menu.students.get(i).getLastName();
                phone = menu.students.get(i).getPhoneNumber();
                display = first + " " + last + " " + phone;
                data.add(i, display.toString());
            }
            studentList.setModel(data);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        courseNameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        timeBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        mainButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        displayStudentCourse = new javax.swing.JButton();
        displayRoomCourse = new javax.swing.JButton();
        deleteCourseButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        roomNumberText = new javax.swing.JTextField();
        studentText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Course Name");

        jLabel2.setText("Time");

        timeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9 AM", "10 AM", "11 AM", "12 PM", "1 PM", "2 PM", "3 PM", "4 PM" }));
        timeBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                timeBoxItemStateChanged(evt);
            }
        });

        roomList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                roomListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(roomList);
        roomList.getAccessibleContext().setAccessibleName("");

        jLabel3.setText("Room List ");

        jLabel4.setText("Student List ");

        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(studentList);

        mainButton.setText("Main Menu");
        mainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add Course");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Display List");

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Time"
            }
        ));
        jScrollPane3.setViewportView(displayTable);

        displayStudentCourse.setText("Display Students by Course");
        displayStudentCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentCourseActionPerformed(evt);
            }
        });

        displayRoomCourse.setText("Display Room by Course");
        displayRoomCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayRoomCourseActionPerformed(evt);
            }
        });

        deleteCourseButton.setText("Delete Course");
        deleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Room Number");

        jLabel7.setText("Student Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayRoomCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayStudentCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(courseNameText)
                                            .addComponent(timeBox, 0, 71, Short.MAX_VALUE))
                                        .addGap(33, 33, 33)
                                        .addComponent(mainButton)))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(studentText, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(roomNumberText)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(courseNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mainButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(roomNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(displayStudentCourse)
                    .addComponent(addButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayRoomCourse)
                            .addComponent(deleteCourseButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainButtonActionPerformed
        this.setVisible(true);
        dispose();
    }//GEN-LAST:event_mainButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       // Displays Everything inside the Add Button
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        // Checks to see if any input is not valid 
        if(courseNameText.getText().equals("") || timeBox.getSelectedItem().toString().equals("") || roomNumberText.getText().equals("") || studentText.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter valid inputs. ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        // Checks to see if the time and course are being used at the moment when the user enters in the course and time
        for(int i = 0; i<menu.courses.size();i++)
        {
            if(menu.courses.get(i).getCourseName().equals(courseNameText.getText()))
            {
                if(menu.courses.get(i).getCourseName().equals(courseNameText.getText()) || menu.courses.get(i).getCourseTime().equals(timeBox.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(this, "Course and Time are currently being used. ", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            }
        }
        // checks to see if a room entered in the text field is only from that particular JList
         if(!roomNumberText.getText().equals(roomList.getSelectedValue())){
            JOptionPane.showMessageDialog(this, "Enter a room number from the list. ", "Error", JOptionPane.WARNING_MESSAGE);
        }
         // checks to see if a student entered in the text field is only from that particular Jlist
         if(!studentText.getText().equals(studentList.getSelectedValue()))
         {
              JOptionPane.showMessageDialog(this, "Enter a student from the list. ", "Error", JOptionPane.WARNING_MESSAGE);
         }
        else
         {
             // Adds in all the previous data from above to the JTable then into the next two JFrames
          menu.courses.add(new Course(getCourseName(), getCourseTime()));
        model.addRow(new Object[]{courseNameText.getText(), timeBox.getSelectedItem().toString()});
         }
    }//GEN-LAST:event_addButtonActionPerformed

    private void timeBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_timeBoxItemStateChanged
       
        
        
    }//GEN-LAST:event_timeBoxItemStateChanged

    private void displayStudentCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentCourseActionPerformed
        DisplayStudentCourse frame = new DisplayStudentCourse();
        frame.setVisible(true);
    }//GEN-LAST:event_displayStudentCourseActionPerformed

    private void displayRoomCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayRoomCourseActionPerformed
        DisplayRoomCourse frame = new DisplayRoomCourse();
        frame.setVisible(true);
    }//GEN-LAST:event_displayRoomCourseActionPerformed

    private void deleteCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseButtonActionPerformed
        // Deletes the course as followed below
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        String roomSelected = roomList.getSelectedValue(); // gets the selected string value from the room JList
        String studentSelected = studentList.getSelectedValue(); // gets the selected string value from the Student JList
        int counter = -1;
        for(int i = 0; i<menu.courses.size();i++)
        {   
            if(menu.courses.get(i).getCourseName().equals(courseNameText.getText())) // Checks to see if course and time exist in the list
            {
                if(menu.courses.get(i).getCourseTime().equals(timeBox.getSelectedItem().toString()))
                {
                    menu.courses.remove(i);
                    model.removeRow(i);
                    counter = i;
                }
            }
        }
             if(counter == -1) // Else if not true course and time not removed should display this...
            {
                JOptionPane.showMessageDialog(this, "Course and Time does not exist in the list ", "Error", JOptionPane.WARNING_MESSAGE);
            }
        
    }//GEN-LAST:event_deleteCourseButtonActionPerformed

    private void roomListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_roomListValueChanged
        String roomSelected = roomList.getSelectedValue().toString();
        roomNumberText.setText(roomSelected);
    }//GEN-LAST:event_roomListValueChanged

    private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_studentListValueChanged
        String studentSelected = studentList.getSelectedValue().toString();
        studentText.setText(studentSelected);
    }//GEN-LAST:event_studentListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField courseNameText;
    private javax.swing.JButton deleteCourseButton;
    private javax.swing.JButton displayRoomCourse;
    private javax.swing.JButton displayStudentCourse;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mainButton;
    private javax.swing.JList<String> roomList;
    private javax.swing.JTextField roomNumberText;
    private javax.swing.JList<String> studentList;
    private javax.swing.JTextField studentText;
    private javax.swing.JComboBox<String> timeBox;
    // End of variables declaration//GEN-END:variables
}
